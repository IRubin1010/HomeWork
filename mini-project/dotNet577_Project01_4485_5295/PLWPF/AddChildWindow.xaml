<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.AddChildWindow"
        mc:Ignorable="d"
        Title="Add Child" Height="350" Width="300">
    <Window.Resources>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Margin" Value="7,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="0"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="7,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Margin" Value="7,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="1"/>
        </Style>
        <Style x:Key="NeedsLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=isSpecialNeedsCheckBox , Path=IsChecked}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NeedsTextBox" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=isSpecialNeedsCheckBox , Path=IsChecked}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="buttonEnable" TargetType="Button">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=iDTextBox , Path=Text}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=motherIDTextBox , Path=Text}" Value="">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=firstNameTextBox , Path=Text}" Value="">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=ageInMonthTextBox , Path=Text}" Value="">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Name="AddChild">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid x:Name="grid1" VerticalAlignment="Top" HorizontalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Content="ID:" Grid.Row="0" Style="{StaticResource LabelStyle}"/>
                <TextBox x:Name="iDTextBox" Text="{Binding ID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="0" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="Mother ID:" Grid.Row="1" Style="{StaticResource LabelStyle}"/>
                <TextBox x:Name="motherIDTextBox" Text="{Binding MotherID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="First Name:" Grid.Row="2" Style="{StaticResource LabelStyle}"/>
                <TextBox x:Name="firstNameTextBox" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="2" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="Birth Date:" Grid.Row="3" Style="{StaticResource LabelStyle}"/>
                <DatePicker x:Name="birthDateDatePicker" Width="140" VerticalAlignment="Center" SelectedDate="{Binding BirthDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3" Margin="7,3" Height="23" HorizontalAlignment="Left" Grid.Column="1"/>
                <Label Content="Age In Month:" Grid.Row="4" Style="{StaticResource LabelStyle}"/>
                <TextBox x:Name="ageInMonthTextBox" Text="{Binding AgeInMonth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4" Style="{StaticResource TextBoxStyle}"/>
                <Label Content="Is Special Needs:" Grid.Row="6" Style="{StaticResource LabelStyle}"/>
                <CheckBox x:Name="isSpecialNeedsCheckBox" IsChecked="{Binding IsSpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6" Style="{StaticResource CheckBoxStyle}"/>
                <Label x:Name="specialNeedsLabel" Content="Special Needs:" Grid.Row="7" Style="{StaticResource NeedsLabel}"/>
                <TextBox x:Name="specialNeedsTextBox" Text="{Binding SpecialNeeds, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Style="{StaticResource NeedsTextBox}"/>
            </Grid>
        </Grid>
        <Label Content="Child details" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" FontSize="20"/>
        <Button Content="submit" Style="{StaticResource buttonEnable}" HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center" Width="150" FontSize="20" Click="AddChild_CLick"/>

    </Grid>
</Window>
