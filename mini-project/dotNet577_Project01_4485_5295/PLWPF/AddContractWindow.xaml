<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        xmlns:BE="clr-namespace:BE;assembly=BE" x:Class="PLWPF.AddContractWindow"
        mc:Ignorable="d"
        Title="AddContractWindow" Height="630" Width="570">
    <Window.Resources>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="Margin" Value="10,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="0"/>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="10,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="23"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
              Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Margin" Value="10,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="1"/>
        </Style>
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Margin" Value="10,3"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style x:Key="radioButtonStyle" TargetType="RadioButton">
            <Setter Property="Margin" Value="20,5,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=childComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="KMTextBox" TargetType="TextBox">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=childComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ChildCombobox" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=motherComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonEnable" TargetType="Button">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=nannyComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=motherComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=childComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="270"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Label Content="contract details" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="*"  Style="{StaticResource LabelStyle}" Margin="67,0,0,0" Foreground="Red" Grid.Row="0"/>
                    <Label Content="Mother ID:" Grid.Row="0" Style="{StaticResource LabelStyle}"/>
                    <ComboBox x:Name="motherComboBox" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding}" Grid.Row="0" DisplayMemberPath="FullNameAndID" SelectionChanged="MotherSelected" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="ID"/>
                    <Label Content="*"  Style="{StaticResource LabelStyle}" Margin="55,0,0,0" Foreground="Red" Grid.Row="1"/>
                    <Label Content="Child ID:" Grid.Row="1" Style="{StaticResource LabelStyle}"/>
                    <ComboBox x:Name="childComboBox" Style="{StaticResource ChildCombobox}" ItemsSource="{Binding}" Grid.Row="1" DisplayMemberPath="NameAndID" SelectionChanged="ChildSelected" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="ID"/>
                </Grid>
                <Grid x:Name="RadioGrid" Grid.Row="1" Margin="0,10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <RadioButton Content="Manual selection" Checked="ManualChecked" Style="{StaticResource radioButtonStyle}"/>
                    <RadioButton Content="Filtered by mother hours" Checked="HoursChecked" Style="{StaticResource radioButtonStyle}" Grid.Row="1"/>
                    <RadioButton Content="Filtered by mother's constraints" Checked="ConstraintsChecked" Style="{StaticResource radioButtonStyle}" Grid.Row="2"/>
                    <Label Content="select Km for distance" Margin="20,0" Grid.Row="3"/>
                    <TextBox Name="KmTextBox" Style="{StaticResource KMTextBox}" Grid.Row="3" Width="50" HorizontalAlignment="Right" Height="20" Margin="20,0"/>
                    <RadioButton Name="RButton4" Content="Filtered by distance from mother" Checked="DistanceChecked" Style="{StaticResource radioButtonStyle}" Grid.Row="4"/>
                    <RadioButton Name="RButton5" Content="5 best matches" Checked="BestMatchChecked" Style="{StaticResource radioButtonStyle}" Grid.Row="5"/>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <Grid x:Name="NannyDetails" VerticalAlignment="Top" Margin="30,0,0,0" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="*"  Style="{StaticResource LabelStyle}" Margin="62,0,0,0" Foreground="Red" Grid.Row="0"/>
                    <Label Content="Nanny ID:" Grid.Row="0" Style="{StaticResource LabelStyle}"/>
                    <ComboBox x:Name="nannyComboBox" IsEnabled="False" Style="{StaticResource ComboBoxStyle}" ItemsSource="{Binding}" Grid.Row="0" DisplayMemberPath="FullNameAndID" SelectionChanged="NannySelected" IsEditable="True" IsTextSearchEnabled="True" TextSearch.TextPath="ID"/>
                    <Label Content="Begin Transection:" Grid.Row="1" Style="{StaticResource LabelStyle}"/>
                    <DatePicker x:Name="beginTransectionDatePicker" SelectedDateChanged="BeginDateSelected" VerticalAlignment="Center" Width="120" SelectedDate="{Binding BeginTransection, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1" Margin="10,3" HorizontalAlignment="Left" Grid.Column="1"/>
                    <Label Content="End Transection:" Grid.Row="2" Style="{StaticResource LabelStyle}"/>
                    <DatePicker x:Name="endTransectionDatePicker"  SelectedDateChanged="EndDateSelected" VerticalAlignment="Center" Width="120"  Grid.Row="2" Margin="10,3" HorizontalAlignment="Left" Grid.Column="1" SelectedDate="{Binding EndTransection, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                    <Label Content="Hourly Fee:" Grid.Row="3" Style="{StaticResource LabelStyle}"/>
                    <TextBox x:Name="hourlyFeeTextBox" IsEnabled="False" Style="{StaticResource TextBoxStyle}" Text="{Binding HourlyFee, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="3"/>
                    <Label Content="Monthly Fee:" Grid.Row="4" Style="{StaticResource LabelStyle}"/>
                    <TextBox x:Name="monthlyFeeTextBox" IsEnabled="False" Style="{StaticResource TextBoxStyle}" Text="{Binding MonthlyFee, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="4"/>
                    <Label Content="Is Payment By Hour:" Grid.Row="5" Style="{StaticResource LabelStyle}"/>
                    <CheckBox x:Name="isPaymentByHourCheckBox" IsHitTestVisible="False" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding IsHourlyFee, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="5"/>
                    <Label Content="Is Meet:" Grid.Row="6" Style="{StaticResource LabelStyle}"/>
                    <CheckBox x:Name="isMeetCheckBox" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding IsMeet, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6"/>
                    <Label Content="month Final Payment:" Grid.Row="7" Style="{StaticResource LabelStyle}"/>
                    <TextBox x:Name="finalPaymentTextBox" IsEnabled="False" Style="{StaticResource TextBoxStyle}" Text="{Binding FinalPayment, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7"/>
                </Grid>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Name="NannyListGrid" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Label Content="nanny list" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" CanContentScroll="True" HorizontalScrollBarVisibility="Disabled">
                <DataGrid Name="Grouping" Width="532" Height="Auto" ItemsSource="{Binding}" AutoGenerateColumns="False" IsReadOnly="True" HeadersVisibility="Column">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridRow}">
                            <EventSetter Event="MouseDoubleClick" Handler="Row_Click"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Binding="{Binding Path=ID}" Width="80">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="first name" Binding="{Binding Path=FirstName}" Width="90">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="last name" Binding="{Binding Path=LastName}" Width="90">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="address" Binding="{Binding Path=Address}" Width="170">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="phone number" Binding="{Binding Path=PhoneNumber}" Width="100">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button Content="submit" Style="{StaticResource ButtonEnable}" Grid.Column="1" HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center" Width="150" FontSize="15" Click="AddContract_Click"/>
            <Button Content="calculat payment" Style="{StaticResource ButtonEnable}" HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center" Width="150" FontSize="15" Click="CalculatePayment_Click"/>
        </Grid>
    </Grid>
</Window>
